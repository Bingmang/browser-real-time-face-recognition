{"version":3,"sources":["sources/test.jpg","components/Home.js","api/face.js","components/ImageInput.js","components/VideoInput.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Home","react_default","a","createElement","Link","to","Component","loadModels","_loadModels","apply","this","arguments","_callee","MODEL_URL","regenerator_default","wrap","_context","prev","next","process","faceapi","stop","getFullFaceDescription","_x","_getFullFaceDescription","_callee2","blob","inputSize","OPTION","useTinyModel","img","fullDesc","_args2","_context2","length","undefined","scoreThreshold","sent","withFaceLandmarks","withFaceDescriptors","console","log","abrupt","maxDescriptorDistance","createMatcher","_x2","_createMatcher","_callee3","faceProfile","members","labeledDescriptors","faceMatcher","_context3","Object","keys","map","member","name","descriptors","descriptor","Float32Array","testImg","require","JSON_PROFILE","INIT_STATE","imageURL","detections","match","ImageInput","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","componentWillMount","asyncToGenerator","mark","t0","t1","t2","setState","handleImage","state","image","then","fd","detection","findBestMatch","handleFileChange","_ref3","event","resetState","URL","createObjectURL","target","files","loading","objectSpread","_this$state","drawBox","i","_H","box","height","_W","width","_X","_Y","_y","key","style","position","border","borderColor","transform","concat","backgroundColor","marginTop","color","_label","id","type","onChange","accept","src","alt","withRouter","VideoInput","setInputDevice","navigator","mediaDevices","enumerateDevices","_ref2","devices","filter","device","kind","facingMode","exact","startCapture","interval","setInterval","capture","webcam","current","getScreenshot","React","createRef","clearInterval","videoConstraints","camera","className","display","flexDirection","alignItems","react_webcam_default","audio","ref","screenshotFormat","App","Router","history","createHistory","basename","Route","path","component","Boolean","window","location","hostname","ReactDOM","render","components_App","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ebef00f6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/test.34e86f06.jpg\";","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default class Home extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>Browser Realtime Face Recognition</h2>\r\n        <li>\r\n          <Link to=\"/photo\">Photo Input</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/camera\">Video Camera</Link>\r\n        </li>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import * as faceapi from 'face-api.js'\r\n\r\n// Load models and weights\r\nexport async function loadModels() {\r\n  const MODEL_URL = process.env.PUBLIC_URL + '/models'\r\n  await faceapi.loadTinyFaceDetectorModel(MODEL_URL)\r\n  await faceapi.loadFaceLandmarkTinyModel(MODEL_URL)\r\n  await faceapi.loadFaceRecognitionModel(MODEL_URL)\r\n}\r\n\r\nexport async function getFullFaceDescription(blob, inputSize = 512) {\r\n  // tiny_face_detector options\r\n  let scoreThreshold = 0.5\r\n  const OPTION = new faceapi.TinyFaceDetectorOptions({\r\n    inputSize,\r\n    scoreThreshold\r\n  })\r\n  const useTinyModel = true\r\n\r\n  // fetch image to api\r\n  let img = await faceapi.fetchImage(blob)\r\n\r\n  // detect all faces and generate full description from image\r\n  // including landmark and descriptor of each face\r\n  let fullDesc = await faceapi\r\n    .detectAllFaces(img, OPTION)\r\n    .withFaceLandmarks(useTinyModel)\r\n    .withFaceDescriptors()\r\n  console.log(fullDesc)\r\n  return fullDesc\r\n}\r\n\r\nconst maxDescriptorDistance = 0.5\r\nexport async function createMatcher(faceProfile) {\r\n  // Create labeled descriptors of member from profile\r\n  let members = Object.keys(faceProfile)\r\n  let labeledDescriptors = members.map(\r\n    member =>\r\n      new faceapi.LabeledFaceDescriptors(\r\n        faceProfile[member].name,\r\n        faceProfile[member].descriptors.map(\r\n          descriptor => new Float32Array(descriptor)\r\n        )\r\n      )\r\n  )\r\n\r\n  // Create face matcher (maximum descriptor distance is 0.5)\r\n  let faceMatcher = new faceapi.FaceMatcher(\r\n    labeledDescriptors,\r\n    maxDescriptorDistance\r\n  )\r\n  return faceMatcher\r\n}\r\n","import React, { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { loadModels, getFullFaceDescription, createMatcher } from '../api/face'\r\n\r\n// Import image to test API\r\nconst testImg = require('../sources/test.jpg')\r\n\r\n// Import face profile\r\nconst JSON_PROFILE = require('../descriptors/face-db.json')\r\n\r\n// Initial State\r\nconst INIT_STATE = {\r\n  imageURL: testImg,\r\n  fullDesc: null,\r\n  detections: null,\r\n  descriptors: null,\r\n  match: null\r\n}\r\n\r\nclass ImageInput extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = { ...INIT_STATE, faceMatcher: null }\r\n  }\r\n\r\n  componentWillMount = async () => {\r\n    await loadModels()\r\n    this.setState({ faceMatcher: await createMatcher(JSON_PROFILE) })\r\n    await this.handleImage(this.state.imageURL)\r\n  }\r\n\r\n  handleImage = async (image = this.state.imageURL) => {\r\n    await getFullFaceDescription(image).then(fullDesc => {\r\n      if (!!fullDesc) {\r\n        this.setState({\r\n          fullDesc,\r\n          detections: fullDesc.map(fd => fd.detection),\r\n          descriptors: fullDesc.map(fd => fd.descriptor)\r\n        })\r\n      }\r\n    })\r\n\r\n    if (!!this.state.descriptors && !!this.state.faceMatcher) {\r\n      let match = await this.state.descriptors.map(descriptor =>\r\n        this.state.faceMatcher.findBestMatch(descriptor)\r\n      )\r\n      this.setState({ match })\r\n    }\r\n  }\r\n\r\n  handleFileChange = async event => {\r\n    this.resetState()\r\n    await this.setState({\r\n      imageURL: URL.createObjectURL(event.target.files[0]),\r\n      loading: true\r\n    })\r\n    this.handleImage()\r\n  }\r\n\r\n  resetState = () => {\r\n    this.setState({ ...INIT_STATE })\r\n  }\r\n\r\n  render() {\r\n    const { imageURL, detections, match } = this.state\r\n\r\n    let drawBox = null\r\n    if (!!detections) {\r\n      drawBox = detections.map((detection, i) => {\r\n        let _H = detection.box.height\r\n        let _W = detection.box.width\r\n        let _X = detection.box._x\r\n        let _Y = detection.box._y\r\n        return (\r\n          <div key={i}>\r\n            <div\r\n              style={{\r\n                position: 'absolute',\r\n                border: 'solid',\r\n                borderColor: 'blue',\r\n                height: _H,\r\n                width: _W,\r\n                transform: `translate(${_X}px,${_Y}px)`\r\n              }}\r\n            >\r\n              {!!match ? (\r\n                <p\r\n                  style={{\r\n                    backgroundColor: 'blue',\r\n                    border: 'solid',\r\n                    borderColor: 'blue',\r\n                    width: _W,\r\n                    marginTop: 0,\r\n                    color: '#fff',\r\n                    transform: `translate(-3px,${_H}px)`\r\n                  }}\r\n                >\r\n                  {match[i]._label}\r\n                </p>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        )\r\n      })\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <input\r\n          id=\"myFileUpload\"\r\n          type=\"file\"\r\n          onChange={this.handleFileChange}\r\n          accept=\".jpg, .jpeg, .png\"\r\n        />\r\n        <div style={{ position: 'relative' }}>\r\n          <div style={{ position: 'absolute' }}>\r\n            <img src={imageURL} alt=\"imageURL\" />\r\n          </div>\r\n          {!!drawBox ? drawBox : null}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(ImageInput)\r\n","import React, { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport Webcam from 'react-webcam'\r\nimport { loadModels, getFullFaceDescription, createMatcher } from '../api/face'\r\n\r\n// Import face profile\r\nconst JSON_PROFILE = require('../descriptors/face-db.json')\r\n\r\nconst WIDTH = 420\r\nconst HEIGHT = 420\r\nconst inputSize = 160\r\n\r\nclass VideoInput extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.webcam = React.createRef()\r\n    this.state = {\r\n      fullDesc: null,\r\n      detections: null,\r\n      descriptors: null,\r\n      faceMatcher: null,\r\n      match: null,\r\n      facingMode: null\r\n    }\r\n  }\r\n\r\n  componentWillMount = async () => {\r\n    await loadModels()\r\n    this.setState({ faceMatcher: await createMatcher(JSON_PROFILE) })\r\n    this.setInputDevice()\r\n  }\r\n\r\n  setInputDevice = () => {\r\n    navigator.mediaDevices.enumerateDevices().then(async devices => {\r\n      let inputDevice = await devices.filter(\r\n        device => device.kind === 'videoinput'\r\n      )\r\n      if (inputDevice.length < 2) {\r\n        await this.setState({\r\n          facingMode: 'user'\r\n        })\r\n      } else {\r\n        await this.setState({\r\n          facingMode: { exact: 'environment' }\r\n        })\r\n      }\r\n      this.startCapture()\r\n    })\r\n  }\r\n\r\n  startCapture = () => {\r\n    this.interval = setInterval(() => {\r\n      this.capture()\r\n    }, 1500)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval)\r\n  }\r\n\r\n  capture = async () => {\r\n    if (!!this.webcam.current) {\r\n      await getFullFaceDescription(\r\n        this.webcam.current.getScreenshot(),\r\n        inputSize\r\n      ).then(fullDesc => {\r\n        if (!!fullDesc) {\r\n          this.setState({\r\n            detections: fullDesc.map(fd => fd.detection),\r\n            descriptors: fullDesc.map(fd => fd.descriptor)\r\n          })\r\n        }\r\n      })\r\n\r\n      if (!!this.state.descriptors && !!this.state.faceMatcher) {\r\n        let match = await this.state.descriptors.map(descriptor =>\r\n          this.state.faceMatcher.findBestMatch(descriptor)\r\n        )\r\n        this.setState({ match })\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { detections, match, facingMode } = this.state\r\n    let videoConstraints = null\r\n    let camera = ''\r\n    if (!!facingMode) {\r\n      videoConstraints = {\r\n        width: WIDTH,\r\n        height: HEIGHT,\r\n        facingMode: facingMode\r\n      }\r\n      if (facingMode === 'user') {\r\n        camera = 'Front'\r\n      } else {\r\n        camera = 'Back'\r\n      }\r\n    }\r\n\r\n    let drawBox = null\r\n    if (!!detections) {\r\n      drawBox = detections.map((detection, i) => {\r\n        let _H = detection.box.height\r\n        let _W = detection.box.width\r\n        let _X = detection.box._x\r\n        let _Y = detection.box._y\r\n        return (\r\n          <div key={i}>\r\n            <div\r\n              style={{\r\n                position: 'absolute',\r\n                border: 'solid',\r\n                borderColor: 'blue',\r\n                height: _H,\r\n                width: _W,\r\n                transform: `translate(${_X}px,${_Y}px)`\r\n              }}\r\n            >\r\n              {!!match && !!match[i] ? (\r\n                <p\r\n                  style={{\r\n                    backgroundColor: 'blue',\r\n                    border: 'solid',\r\n                    borderColor: 'blue',\r\n                    width: _W,\r\n                    marginTop: 0,\r\n                    color: '#fff',\r\n                    transform: `translate(-3px,${_H}px)`\r\n                  }}\r\n                >\r\n                  {match[i]._label}\r\n                </p>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        )\r\n      })\r\n    }\r\n\r\n    return (\r\n      <div\r\n        className=\"Camera\"\r\n        style={{\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignItems: 'center'\r\n        }}\r\n      >\r\n        <p>Camera: {camera}</p>\r\n        <div\r\n          style={{\r\n            width: WIDTH,\r\n            height: HEIGHT\r\n          }}\r\n        >\r\n          <div style={{ position: 'relative', width: WIDTH }}>\r\n            {!!videoConstraints ? (\r\n              <div style={{ position: 'absolute' }}>\r\n                <Webcam\r\n                  audio={false}\r\n                  width={WIDTH}\r\n                  height={HEIGHT}\r\n                  ref={this.webcam}\r\n                  screenshotFormat=\"image/jpeg\"\r\n                  videoConstraints={videoConstraints}\r\n                />\r\n              </div>\r\n            ) : null}\r\n            {!!drawBox ? drawBox : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(VideoInput)\r\n","import React, { Component } from 'react'\r\nimport { Route, Router } from 'react-router-dom'\r\nimport createHistory from 'history/createBrowserHistory'\r\nimport '../styles/App.css'\r\n\r\nimport Home from './Home'\r\nimport ImageInput from './ImageInput'\r\nimport VideoInput from './VideoInput'\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Router history={createHistory({ basename: process.env.PUBLIC_URL })}>\r\n          <div className=\"route\">\r\n            <Route exact path=\"/\" component={Home} />\r\n            <Route exact path=\"/photo\" component={ImageInput} />\r\n            <Route exact path=\"/camera\" component={VideoInput} />\r\n          </div>\r\n        </Router>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}